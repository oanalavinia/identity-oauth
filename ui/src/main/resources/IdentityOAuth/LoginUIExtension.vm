{{velocity output="false"}}
#macro (renderLoginCodes $loginCodes $hasSeveralLogins)
  #set ($count = 0)
  #set ($loginCodeWrapperStart = '<div class="identity-oauth-provider-login">')
  #foreach ($loginCode in $identityOAuth.renderLoginCodes())
    #set ($count = $mathtool.add($count, 1))
    #set ($loginCodes="${loginCodes}${loginCodeWrapperStart}${loginCode}</div>")
  #end
  #set ($hasSeveralLogins = $count > 0)
#end
{{/velocity}}

{{velocity}}
#set ($mainReference = $services.model.createDocumentReference('', 'IdentityOAuth', 'WebPreferences'))
#set ($generalConfigDoc = $xwiki.getDocument('IdentityOAuth.IdentityOAuthGeneralConfiguration'))
#set ($generalConfigObj = $generalConfigDoc.getObject('IdentityOAuth.IdentityOAuthGeneralConfigClass'))
#if ($xcontext.getAction()=="login" && $doc.fullName=="XWiki.XWikiLogin")
  #if (!$services.licensing.licensor.hasLicensureForEntity($mainReference))
    #set($statusMessage = "identityOAuth installed but not licensed.")
  #else
    #set($identityOAuth = $services.idoauth)
    #if ($identityOAuth.doesDetectReturn())
      #set($statusMessage = "IdentityOAuth: return of the OAuth bounce; if all goes well, the user can be logged in.")
      #set($result = $identityOAuth.processOAuthReturn())
      #set($prfx = "failed login:")
      #if ($result.startsWith($prfx))
        #set($email = $result.substring($prfx.length()))
        #set($errorMsg = " ${services.localization.render('idoauth.login.domainerror1')} ")
        #set($errorMsg = " ${errorMsg} ${services.localization.render('idoauth.login.domainerror2')} $!{email}.")
        #set($errorMsg = " ${errorMsg} ${services.localization.render('idoauth.login.domainerror3')}")
      #elseif ($result=="ok")
        #set($successM = ${services.localization.render("idoauth.login.redirectmessage")})
        ## the browser should have been redirected by processOAuthReturn
      #else ## $result is "no user"
        #set($errorMsg = ${services.localization.render('idoauth.login.message')})
        #set($errorMsg = " ${errorMsg} ${services.localization.render('idoauth.login.error')}")
        #if($request.getAttribute("idoauth-error-message"))
          #set($errorMsg = "${errorMsg}: ${request.getAttribute('idoauth-error-message')}")
        #end
      #end
    #elseif ($request.identityOAuth == "start")
      ## Don't alter the login form in case the XWiki default implementation is requested.
      #if ("$!request.provider" != "default")
        #set($statusMsg = "IdentityOAuth Start login, should bounce to the provider.")
        #set($succesMsg = $services.localization.render("idoauth.login.oauth.message"))
        #set($success = $identityOAuth.processOAuthStart()) <!-- processOAuthStart: $success -->
        #if($success)
          #if($request.state)
            #set($successMsg = $services.localization.render("idoauth.login.oauth.successwithredirect"))
          #else
            #set($successMsg = $services.localization.render("idoauth.login.oauth.success"))
          #end
        #else
          #set($errorMsg = $services.localization.render("idoauth.login.oauth.failedOAuth"))
        #end
      #end
    #elseif ($request.identityOAuth)
      #set($statusMsg = "no such identityOAuth operation '$request.identityOAuth'")
    #else
      #set($statusMsg = "Login page")
      ## assemble the login code from the providers
      #set($loginCodes = '<div id="idoauth-login-choice">
                             <div class="col-xs-12">')
      #renderLoginCodes($loginCodes $hasSeveralLogins)
      #set($loginCodes="${loginCodes}</div><div style='clear: both;'></div></div>")
    #end

    ## ============================================== end of velocity preparation ===============================

    {{html clean="false" wiki="false"}}<!-- this is IdentityOAuth -->
    <!-- This code is displayed on the login page, so we cannot use a ssx skin extension since guest users may have
    restricted view rights and the style won't be displayed -->
    <style>
    .provider-login-button {
      background: white;
      color: #333;
      border: #e8e8e8 2px solid;
      display: flex;
      align-items: center;
    }
    .provider-login-button >img {
      height: 1.1em;
      margin-right: 2%;
    }
    .identity-oauth-provider-login {
      padding: 3% 0;
    }

    #idoauth-login-choice {
      margin-bottom: 5%;
    }
    </style>
    <!-- ======= ${statusMsg} ====== -->

    #if ($successMsg || $errorMsg)
    <script type="text/javascript">
      // Identity OAuth Login Extension: Success or warning messages
      document.addEventListener('DOMContentLoaded', function() {
        var p = document.createElement("p"), div = document.createElement("div");
        #if ($successMsg)
          p.innerText = "${escapetool.javascript($successMsg)}";
          div.className = "box successmessage";
        #elseif ($errorMsg)
          p.innerText = "${escapetool.javascript($errorMsg)}";
          div.className = "box warningmessage";
        #end
        div.appendChild(p);
        var c = document.getElementById("mainContentArea")
        c.insertBefore(div, c.firstChild);
      });
    </script>
    #elseif($hasSeveralLogins)
    <script type="text/javascript">
      // Identity OAuth Login Extension: Button: offer a button to go to the provider. Don't alter the login if no other
      // providers are defined.
      document.addEventListener('DOMContentLoaded', function() {
        require(['jquery', 'xwiki-events-bridge', 'xwiki-meta'], function($, xm) {
          window.loginWithXWiki = function() {
              jQuery(".panel .panel-body dl").show()
              return false;
          }
          if (XWiki.contextaction == "login" || XWiki.contextaction == "loginsubmit" ) {
            var url = location.href, baseUrl = url;
            if (url.indexOf('?') < 0){
                url=url+'?';
            } else {
                baseUrl = url.substring(0, url.indexOf('?'));
            }
            if (url.indexOf('identityOAuth=')>=0) {
                url = url.replace(/identityOAuth=[a-zA-Z]*/, "identityOAuth=start");
            } else {
                url = url + "&identityOAuth=start";
            }
            url = url + "&browserLocation=" + escape(baseUrl);

            var loginCode = "${escapetool.javascript($loginCodes)}";
            loginCode = loginCode.replace("-URL-",url);
            jQuery(loginCode).insertBefore(jQuery(".panel .panel-body dl"));

            if (XWiki.contextaction != "loginsubmit") {
              jQuery(".panel .panel-body dl").hide();
            }
          }
        }); // end requirejs
      });
    </script>
    #end ## if ($successMsg || $errorMsg)
  {{/html}}
  #end ## identityOAuth is active
#end ## on login page
{{/velocity}}
